# OpenRemote v3
#
# Profile that runs the vanilla stack on https://localhost using a self-signed SSL certificate,
# with username 'admin' and password 'secret'. There is no map data available in the vanilla
# system so the map tile server will not function. Persistent data is stored in a docker
# volume called postgresql-data between restarts, simply delete this volume to reset the
# system to an empty state.
#
# Please see profile/deploy.yml for configuration details for each service.
#
version: "3.7"

networks:
  public:
    driver: overlay
    driver_opts:
      encrypted: "true"
    attachable: true
  private:
    driver: overlay
    driver_opts:
      encrypted: "true"
    attachable: true

volumes:
  proxy-data:
  postgresql-data:
  deployment-data:
  temp-date:

x-app: &awslogs
  logging:
    driver: awslogs
    options:
      awslogs-region: ${AWS_REGION:-eu-west-1}
      awslogs-group:  ${AWSLOGS_GROUP:-openremote}
      awslogs-create-group: 'true'

services:
  proxy:
    image: openremote/proxy:${PROXY_VERSION:-latest}
    networks:
      - public
      - private
    depends_on:
      - manager
    healthcheck:
      interval: 3s
      timeout: 3s
      start_period: 2s
      retries: 3
      test: ["CMD", "curl", "--fail", "--silent", "http://localhost:80"]
    ports:
      - "80:80"
      - "${OR_SSL_PORT:-443}:443"
      - "8883:8883"
    volumes:
      - proxy-data:/deployment
    deploy:
      replicas: 1
      restart_policy:
        delay: 10s
        window: 30s
      update_config:
        failure_action: rollback
        order: start-first
        delay: 30m
    environment:
      DOMAINNAME: ${OR_HOSTNAME:-localhost}
      LE_EMAIL: admin@${OR_HOSTNAME}
      DOMAINNAMES: ${OR_ADDITIONAL_HOSTNAMES:-}
    <<: *awslogs

  manager:
    image: openremote/manager:${MANAGER_VERSION:-latest}
    networks:
      - private
    depends_on:
      - keycloak
    healthcheck:
      interval: 3s
      timeout: 3s
      start_period: 2s
      retries: 120
      test: ["CMD", "curl", "--fail", "--silent", "http://localhost:8080"]
    ports:
      # SNMP trap
      - "162:162/udp"
    volumes:
      - deployment-data:/deployment
    deploy:
      replicas: 1
      update_config:
        failure_action: rollback
        order: start-first
        delay: 10s
    environment:
      OR_ADMIN_PASSWORD: ${OR_ADMIN_PASSWORD:-secret}
      OR_HOSTNAME: ${OR_HOSTNAME:-https://localhost}
      OR_ADDITIONAL_HOSTNAMES: ${OR_ADDITIONAL_HOSTNAMES:-}
      OR_SSL_PORT: ${OR_SSL_PORT:-443}
      OR_DEV_MODE: ${OR_DEV_MODE:-false}
      KEYCLOAK_FRONTEND_URL: https://${OR_HOSTNAME:-localhost}/auth
      OR_EMAIL_HOST: ${OR_EMAIL_HOST:-email-smtp.eu-west-1.amazonaws.com}
      OR_EMAIL_USER: ${OR_EMAIL_USER}
      OR_EMAIL_PASSWORD: ${OR_EMAIL_PASSWORD}
      OR_EMAIL_PORT: ${SETUP_EMAIL_PORT:-587}
      OR_EMAIL_FROM: no-reply@${OR_HOSTNAME}
      OR_EMAIL_ADMIN: admin@${OR_HOSTNAME}
    <<: *awslogs

  keycloak:
    image: openremote/keycloak:${KEYCLOAK_VERSION:-latest}
    networks:
      - public
      - private
    depends_on:
      - postgresql
    healthcheck:
      test: ["CMD", "curl", "--fail", "--silent", "http://localhost:8080/auth"]
      interval: 3s
      timeout: 3s
      start_period: 60s
      retries: 30
    deploy:
      replicas: 1
      update_config:
        failure_action: rollback
        order: start-first
        delay: 10m
    volumes:
      - deployment-data:/deployment
    environment:
      KEYCLOAK_PASSWORD: ${OR_ADMIN_PASSWORD:-secret}
      KEYCLOAK_FRONTEND_URL: https://${OR_HOSTNAME:-localhost}/auth
    <<: *awslogs

  postgresql:
    image: openremote/postgresql:${POSTGRESQL_VERSION:-latest}
    networks:
      - private
    healthcheck:
      interval: 3s
      timeout: 3s
      start_period: 2s
      retries: 30
      test: ["CMD", "gosu", "postgres", "pg_isready"]
    deploy:
      replicas: 1
      update_config:
        failure_action: rollback
        order: start-first
        delay: 20m
    volumes:
      - postgresql-data:/var/lib/postgresql/data
      - temp-data:/tmp
    <<: *awslogs
